name: build-app

on:
  workflow_call:
    inputs:
      AWS_REGION:
        required: true
        type: string
      ENVIRONMENT:
        required: true
        type: string
      PROJECT_NAME:
        required: true
        type: string 
      SERVICE_NAME:
        required: true 
        type: string
    secrets:
      AWS_ACCOUNT_NUMBER:
        required: true
      GH_TOKEN_FLUX:
        required: true
env:
  ECR_REGISTRY: ${{ secrets.AWS_ACCOUNT_NUMBER }}.dkr.ecr.${{ inputs.AWS_REGION }}.amazonaws.com
  ECR_REPOSITORY: ${{ inputs.SERVICE_NAME }}-${{ inputs.PROJECT_NAME }}
  AWS_IAM_ROLE_GH: 'GitHubAction-smart-cash'
  GH_USERNAME: danielrive 

jobs:
  docker-build:
    runs-on: ubuntu-latest
    outputs:
      FOLDERS_UPDATED: ${{ steps.get_folders_changed.outputs.FOLDERS_UPDATED }}
    steps:
      - name: checkout-repo
        id: checkout
        uses: actions/checkout@v4
      - name: Set up QEMU
        id: set-up-qemu
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        id: set-up-buildx
        uses: docker/setup-buildx-action@v2
      # - name: configure aws credentials
      #   id: aws-creds-config
      #   uses: aws-actions/configure-aws-credentials@v4
      #   with:
      #     role-to-assume: 'arn:aws:iam::${{ secrets.AWS_ACCOUNT_NUMBER }}:role/${{ env.AWS_IAM_ROLE_GH }}'
      #     role-session-name: GitHub_to_AWS_via_FederatedOIDC
      #     aws-region: ${{ inputs.AWS_REGION }}
      # - name: Login AWS ECR
      #   id: login-ecr
      #   uses: aws-actions/amazon-ecr-login@v2
      - name: Build containter
        id: build-and-push
        working-directory: './${{ inputs.SERVICE_NAME }}'
        run: | 
             COMMIT_ID=${{ github.sha}}

             SHORT_COMMIT_ID="${COMMIT_ID:0:6}"
           
             echo "IMAGE_TAG=${{ inputs.ENVIRONMENT }}-$SHORT_COMMIT_ID" >> $GITHUB_OUTPUT
       
        # run: | 
        #     COMMIT_ID=${{ github.sha}}

        #     SHORT_COMMIT_ID="${COMMIT_ID:0:6}"
            
        #     echo "${{ github.ref }}"

        #     docker buildx build -t ${{ env.ECR_REGISTRY }}/${{ env.ECR_REPOSITORY }}:${{ inputs.ENVIRONMENT }}-$SHORT_COMMIT_ID --push --platform linux/amd64 .

        #     echo "Tag the image with the commit ID"
            
        #     echo "IMAGE_TAG="${{ inputs.ENVIRONMENT }}-SHORT_COMMIT_ID" >> $GITHUB_OUTPUT

  service-push-gitops:
    needs: docker-build
    runs-on: ubuntu-latest
    steps:
      - name: checkout gitops repo
        id: checkout-gitops-repo
        uses: actions/checkout@v4
        with:
            repository: danielrive/smart-cash-gitops-flux
            token: ${{ secrets.GH_TOKEN_FLUX }}
      - name: install-yq
        id: install-yq
        run: |
          wget https://github.com/mikefarah/yq/releases/latest/download/yq_linux_amd64 -O /tmp/yq && chmod +x /tmp/yq
          yq --version
      - name: commit-push-dev-env
        run: |
          git config user.name "gh-action-smartcash"
          git config user.email "your.email@example.com"
      - name: update-tag-in-kustomization
        id: test
        env: 
          IMAGE_TAG: needs.docker-build.outputs.IMAGE_TAG
        run: |
            yq eval '.images[0].newTag = $IMAGE_TAG' -i kustomization.yaml
        working-directory: './${{ inputs.SERVICE_NAME }}/overlays/${{ inputs.ENVIRONMENT }}'         
      - name: Commit and push changes
        env: 
          IMAGE_TAG: needs.docker-build.outputs.IMAGE_TAG
        run: |
          git add .
          git commit -m "updating for ${{ inputs.SERVICE_NAME }}  to $IMAGE_TAG "
          git push origin main
        working-directory: './${{ inputs.SERVICE_NAME }}/overlays/${{ inputs.ENVIRONMENT }}'
  

 