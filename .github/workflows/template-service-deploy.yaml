name: build-app

#### WARNING !!!
###### For this project Pull Request will NOT be created in the GitOps repo, new tag created for the images are pushed directly to main
#####  this to avoid to many steps just for a non-prod project, if you want to re-use this code for a production env, avoid direct push to main 
#### in the GitOps repo

on:
  workflow_call:
    inputs:
      AWS_REGION:
        required: true
        type: string
      ENVIRONMENT:
        required: true
        type: string
      PROJECT_NAME:
        required: true
        type: string 
      SERVICE_NAME:
        required: true 
        type: string
      TRIVY_VERSION:
        required: false
        type: string
        default: '0.18.3'
    secrets:
      AWS_ACCOUNT_NUMBER:
        required: true
      GH_TOKEN_FLUX:
        required: true
env:
  ECR_REGISTRY: ${{ secrets.AWS_ACCOUNT_NUMBER }}.dkr.ecr.${{ inputs.AWS_REGION }}.amazonaws.com
  ECR_REPOSITORY: ${{ inputs.SERVICE_NAME }}-${{ inputs.PROJECT_NAME }}
  AWS_IAM_ROLE_GH: 'GitHubAction-smart-cash'
  GH_USERNAME: danielrive 

jobs:
  docker-build:
    runs-on: ubuntu-latest
    outputs:
      IMAGE_TAG: ${{ steps.build-and-push.outputs.IMAGE_TAG }}
    steps:
      - name: checkout-repo
        id: checkout
        uses: actions/checkout@v4
      - name: Set up QEMU
        id: set-up-qemu
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        id: set-up-buildx
        uses: docker/setup-buildx-action@v2
      - name: configure aws credentials
        id: aws-creds-config
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: 'arn:aws:iam::${{ secrets.AWS_ACCOUNT_NUMBER }}:role/${{ env.AWS_IAM_ROLE_GH }}'
          role-session-name: GitHub_to_AWS_via_FederatedOIDC
          aws-region: ${{ inputs.AWS_REGION }}
      - name: Login AWS ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2
      - name: Build containter
        id: build-and-push
        working-directory: 'app/'
        run: |

            COMMIT_ID=${{ github.sha}}

            SHORT_COMMIT_ID="${COMMIT_ID:0:6}"
            
            echo "${{ github.ref }}"

            docker buildx build -t ${{ env.ECR_REGISTRY }}/${{ env.ECR_REPOSITORY }}:${{ github.sha}} --file ./${{ inputs.SERVICE_NAME }}/Dockerfile --load --platform linux/amd64 .

      - name: Image security scanning
        id: image-scanning
        run: | 
          wget -q https://github.com/aquasecurity/trivy/releases/download/v${{ inputs.TRIVY_VERSION }}/trivy_${{ inputs.TRIVY_VERSION }}_Linux-64bit.deb
          sudo dpkg -i trivy_${{ inputs.TRIVY_VERSION }}_Linux-64bit.deb > /dev/null 2>&1
          trivy --version

          echo " ---> Scaning the image ${{ env.ECR_REGISTRY }}/${{ env.ECR_REPOSITORY }}:${{ github.sha}}"
          trivy image --no-progress --format json -o ${{ inputs.SERVICE_NAME }}-${{ github.sha}}.json ${{ env.ECR_REGISTRY }}/${{ env.ECR_REPOSITORY }}:${{ github.sha}} 
          echo " ---> Formating output"
          #trivy convert --format template --template '{{- $critical := 0 }}{{- $high := 0 }}{{- range . }}{{- range .Vulnerabilities }}{{- if  eq .Severity "CRITICAL" }}{{- $critical = add $critical 1 }}{{- end }}{{- if  eq .Severity "HIGH" }}{{- $high = add $high 1 }}{{- end }}{{- end }}{{- end }}Critical: {{ $critical }}, High: {{ $high }}' ${{ inputs.SERVICE_NAME }}-${{ github.sha}}.json
          #echo " ---> Generate Sarif file"
          # trivy convert --format sarif --output ${{ inputs.SERVICE_NAME }}-${{ github.sha}}.sarif ${{ inputs.SERVICE_NAME }}-${{ github.sha}}.json
      - name: List files in workspace
        run: ls -al
      - name: Show result.json
        run: cat ${{ inputs.SERVICE_NAME }}-${{ github.sha}}.json
      - name: convert to sarif
        run: trivy convert --format sarif --output ${{ inputs.SERVICE_NAME }}-${{ github.sha }}.sarif ./${{ inputs.SERVICE_NAME }}-${{ github.sha}}.json
      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: '${{ inputs.SERVICE_NAME }}-${{ github.sha}}.sarif'
