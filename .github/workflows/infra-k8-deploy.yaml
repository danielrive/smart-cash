name: K8 resource Deploy
run-name: K8-Resource-Deploy

on: 
  push:
    branches:
      - develop
      - feat/*
      - refactor/folder-structure
  #  paths:
  #    - "infra/kubernetes/**"
  pull_request:
    branches:
      - develop

permissions:
  id-token: write # This is required for requesting the JWT
  contents: read  # This is required for actions/checkout

### Define General env variables

defaults:
  run:
    shell: bash
    working-directory: ./infra/terraform

env:
  PROJECT_NAME: smart-cash
  AWS_REGION: us-west-2
  ENVIRONMENT: develop
  
jobs:
  check-if-cluster-exists:
    runs-on: ubuntu-latest
    steps:
      - name: configure aws credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: 'arn:aws:iam::${{ secrets.AWS_ACCOUNT_NUMBER_DEVELOP }}:role/GitHubAction-smart-cash' 
          role-session-name: 'GitHub_to_AWS_via_FederatedOIDC'
          aws-region: "us-west-2"
      - name: validate-get-eks-cluster
        id: eks-cluster
        run: |
          echo "Get EKS cluster"
          aws eks describe-cluster --name ${{ env.PROJECT_NAME }}-${{ env.ENVIRONMENT }}
## Execute bash script that  create s3 bucket and dynamodb table for Terraform backend
  set-up-terraform-backend:
    runs-on: ubuntu-latest
    steps:  
      - name: checkout-repo
        uses: actions/checkout@v4
      - name: configure aws credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: 'arn:aws:iam::${{ secrets.AWS_ACCOUNT_NUMBER_DEVELOP }}:role/GitHubAction-smart-cash' 
          role-session-name: 'GitHub_to_AWS_via_FederatedOIDC'
          aws-region: "us-west-2"
      - name: config tf backend
        id: tf-backend
        run: ./terraform-backend.sh
        env:
          AWS_REGION: 'us-west-2'
          ENVIRONMENT: 'develop'
          PROJECT_NAME: 'smart-cash'
        working-directory: .github/jobs/
  ### Makes a call to the workflow template defined to execute terraform, in this case the variables define the develop environment
 
  K8_COMMON_RESOURCES_DEPLOY:
    uses: danielrive/smart-cash/.github/workflows/run-terraform-template.yaml@refactor/folder-structure
    needs: EKS_STAGE_DEPLOY
    with: 
      AWS_REGION: 'us-west-2'
      ENVIRONMENT: 'develop'
      PROJECT_NAME: 'smart-cash'
      TERRAFORM_VERSION: '1.4.6'
      AWS_IAM_ROLE_GH: 'GitHubAction-smart-cash'
      STAGE: 'workloads/common'
      ARTIFAC_ID: 'k8-common'
    secrets:
      AWS_ACCOUNT_NUMBER: ${{ secrets.AWS_ACCOUNT_NUMBER_DEVELOP }}
      GH_TOKEN_FLUX: ${{ secrets.GH_TOKEN_FLUXCD }}
  
  #VALIDATE_SVC_UPDATED:
  # runs-on: ubuntu-latest
  # needs: EKS_STAGE_DEPLOY
  # outputs:
  #    FOLDERS_UPDATED: ${{ steps.get_folders_changed.outputs.FOLDERS_UPDATED }}
  # steps:
  #   - name: checkout-repo
  #     id: checkout
  #     uses: actions/checkout@v4
  #     with:
  #        fetch-depth: 0
  #   - name: Get modified services
  #     id: get_folders_changed
  #     run: |
  #        . detect-folders-updated.sh  ${{ github.event.before }} ${{ github.sha }}
  #        echo "getting file"
  #     working-directory: .github/jobs

  SERVICES_INFRA_DEPLOY:
   # needs: VALIDATE_SVC_UPDATED
    strategy: 
      matrix: 
        folders: ["user-service","bank-service","expenses-service","payment-service"]
      #matrix: ${{ fromJSON(needs.VALIDATE_SVC_UPDATED.outputs.FOLDERS_UPDATED) }}
      fail-fast: false
    uses: danielrive/smart-cash/.github/workflows/run-terraform-template.yaml@refactor/folder-structure
    with: 
      AWS_REGION: 'us-west-2'
      ENVIRONMENT: 'develop'
      PROJECT_NAME: 'smart-cash'
      TERRAFORM_VERSION: '1.4.6'
      AWS_IAM_ROLE_GH: 'GitHubAction-smart-cash'
      STAGE: 'workloads/services/${{ matrix.folders }}'
      ARTIFAC_ID: 'k8-${{ matrix.folders }}'
    secrets:
      AWS_ACCOUNT_NUMBER: ${{ secrets.AWS_ACCOUNT_NUMBER_DEVELOP }}
      GH_TOKEN_FLUX: ${{ secrets.GH_TOKEN_FLUXCD }}