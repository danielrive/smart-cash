name: DESTROY INFRASTRUCTURE
run-name: DESTROY-INFRASTRUCTURE

on:
  workflow_dispatch:
    inputs:
      stage:
        description: 'stage name to destroy'
        required: true
        type: choice
        options:
          -  hydradb-service
          -  user-service
          -  frontend-service
          -  expenses-service
          -  bank-service
          -  3-k8-common-stage
          -  2-eks-cluster-stage
          -  1-base-stage
permissions:
  id-token: write # This is required for requesting the JWT
  contents: read  # This is required for actions/checkout

defaults:
  run:
    shell: bash
    working-directory: ./infra/terraform

env:
  ENVIRONMENT: "develop"
  AWS_REGION: "us-west-2"
  PROJECT_NAME: "smart-cash"
  TERRAFORM_VERSION: '1.9.2'
  FLUX_REPO_NAME: 'smart-cash-gitops-flux'
  WORKING_DIRECTORY: './infra'
  AWS_IAM_ROLE_GH: 'GitHubAction-smart-cash'

jobs:
  destroy-process:
   runs-on: ubuntu-latest
   steps:
     - name: checkout-repo
       id: checkout
       uses: actions/checkout@v4
       with:
          fetch-depth: 0
     - name: Terraform install
       id: 'install-terraform'
       uses: hashicorp/setup-terraform@v3
       with: 
         terraform_version: '${{ env.TERRAFORM_VERSION }}'
     - name: configure aws credentials
       uses: aws-actions/configure-aws-credentials@v4
       with:
          role-to-assume: 'arn:aws:iam::${{ secrets.AWS_ACCOUNT_NUMBER_DEVELOP }}:role/${{ env.AWS_IAM_ROLE_GH }}' 
          role-session-name: GitHub_to_AWS_via_FederatedOIDC
          aws-region: ${{ env.AWS_REGION }}
     - name: Run terraform init
       id: 'tf-init'
       run: | 
              pwd
              if [[ "${{ github.event.inputs.stage }}" == *"service"* ]]; then
                cd 4-workloads-stage/${{ github.event.inputs.stage }}
              else
                cd ${{ github.event.inputs.stage }}
              fi
              pwd
              BUCKET_NAME="${{ env.PROJECT_NAME }}-tf-state-lock-${{ env.ENVIRONMENT }}-${{ env.AWS_REGION }}" 
              DYNAMODB_TABLE="${{ env.PROJECT_NAME }}-tf-state-${{ env.ENVIRONMENT }}-${{ env.AWS_REGION }}"
              terraform init \
              -backend-config=bucket="$BUCKET_NAME" \
              -backend-config=region='${{ env.AWS_REGION }}' \
              -backend-config=key="stage/${{ github.event.inputs.stage }}/${{ github.event.inputs.stage }}.tfstate" \
              -backend-config=dynamodb_table="$DYNAMODB_TABLE"
       shell: bash
       working-directory: '${{ env.WORKING_DIRECTORY }}'
     - name: Run terraform destroy
       id: terraform-destroy
       run: | 
            if [[ "${{ github.event.inputs.stage }}" == *"service"* ]]; then
                cd 4-workloads-stage/${{ github.event.inputs.stage }}
            else
                cd ${{ github.event.inputs.stage }}
            fi
            terraform destroy \
            -auto-approve \
            -var 'region=${{ env.AWS_REGION }}' \
            -var 'environment=${{ env.ENVIRONMENT }}' \
            -var 'project_name=${{ env.PROJECT_NAME }}' 
       shell: bash
       working-directory:  '${{ env.WORKING_DIRECTORY }}'
