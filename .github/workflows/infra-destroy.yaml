name: DESTROY INFRASTRUCTURE
run-name: DESTROY-INFRASTRUCTURE

on:
  workflow_dispatch:
    inputs:
      branch-to-destroy:
        description: 'branch name where is the tf code what will be used to destroy all the infra'
        required: true
        default: develop

permissions:
  id-token: write # This is required for requesting the JWT
  contents: read  # This is required for actions/checkout

defaults:
  run:
    shell: bash
    working-directory: ./infra/terraform

env:
  ENVIRONMENT: "develop"
  AWS_REGION: "us-west-2"
  PROJECT_NAME: "smart-cash"
  TERRAFORM_VERSION: '1.9.2'
  FLUX_REPO_NAME: 'smart-cash-gitops-flux'
  WORKING_DIRECTORY: './infra/terraform'
  AWS_IAM_ROLE_GH: 'GitHubAction-smart-cash'


jobs:
  destroy-process:
   runs-on: ubuntu-latest
   strategy:
      max-parallel: 1
      matrix:
        folders: [ workloads/services/user-service, workloads/services/payment-service, workloads/services/expenses-service, workloads/services/bank-service, eks-cluster, base]
      fail-fast: false
   steps:
     - name: checkout-repo
       id: checkout
       uses: actions/checkout@v4
       with:
          fetch-depth: 0
          ref: ${{ github.event.inputs.branch-to-destroy }}
     - name: Terraform install
       id: 'install-terraform'
       uses: hashicorp/setup-terraform@v3
       with: 
         terraform_version: '${{ env.TERRAFORM_VERSION }}'
     - name: configure aws credentials
       uses: aws-actions/configure-aws-credentials@v4
       with:
          role-to-assume: 'arn:aws:iam::${{ secrets.AWS_ACCOUNT_NUMBER_DEVELOP }}:role/${{ env.AWS_IAM_ROLE_GH }}' 
          role-session-name: GitHub_to_AWS_via_FederatedOIDC
          aws-region: ${{ env.AWS_REGION }}
     - name: Run terraform init
       id: 'tf-init'
       run: |
              STAGE_NAME=$(echo "${{ matrix.folders }}" | awk -F'/' '{print $3}')
              BUCKET_NAME="${{ env.PROJECT_NAME }}-tf-state-lock-${{ env.ENVIRONMENT }}-${{ env.AWS_REGION }}" 
              DYNAMODB_TABLE="${{ env.PROJECT_NAME }}-tf-state-${{ env.ENVIRONMENT }}-${{ env.AWS_REGION }}"
              terraform init \
              -backend-config=bucket="$BUCKET_NAME" \
              -backend-config=region='${{ env.AWS_REGION }}' \
              -backend-config=key="stage/$STAGE_NAME/$STAGE_NAME.tfstate" \
              -backend-config=dynamodb_table="$DYNAMODB_TABLE"
       shell: bash
       working-directory: '${{ env.WORKING_DIRECTORY }}/${{ matrix.folders }}'
     - name: Run terraform destroy
       id: terraform-destroy
       run: | 
            terraform destroy \
            -auto-approve \
            -var 'region=${{ env.AWS_REGION }}' \
            -var 'environment=${{ env.ENVIRONMENT }}' \
            -var 'project_name=${{ env.PROJECT_NAME }}' 
       shell: bash
       working-directory:  '${{ env.WORKING_DIRECTORY }}/${{ matrix.folders }}'
