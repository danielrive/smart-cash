name: DEVELOP Microservice deploy 
run-name: Devevelop-services-deploy

on:
  workflow_dispatch:
    inputs:
      service_to_deploy:
        description: 'service name to deploy'
        required: true
        default: 'none'
        type: choice
        options:
          - user-service
          - expenses-service
          - frontend-service
  push:
    branches:
      - develop
      - feat/*
    paths-ignore:
      - .github/**
      - infra/**

permissions:
  id-token: write
  contents: read
  security-events: write

defaults:
  run:
    shell: bash

jobs:
  validate-service-updated:
    runs-on: ubuntu-latest
    outputs:
      FOLDERS_UPDATED: ${{ steps.get_folders_changed.outputs.FOLDERS_UPDATED }}
    steps:
      - name: checkout-repo
        id: checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Get modified services
        id: get_folders_changed
        run: |
          echo "input $RUN_ALL dispatch"
          if [[ "${{ github.event.inputs.service_to_deploy }}" != '' ]]; then
            echo "an input was passed"
            
            FOLDERS_UPDATED_ARRAY=( ${{ github.event.inputs.service_to_deploy }} ) 

            FOLDERS_MODIFIED_JSON="{\"folders\":["
            
            for item in "${FOLDERS_UPDATED_ARRAY[@]}"; do
                FOLDERS_MODIFIED_JSON+="\"$item\","
            done

            FOLDERS_MODIFIED_JSON="${FOLDERS_MODIFIED_JSON%,}"  # Remove the trailing comma
                          
            FOLDERS_MODIFIED_JSON+="]}"

            echo $FOLDERS_MODIFIED_JSON

            echo "FOLDERS_UPDATED=$FOLDERS_MODIFIED_JSON" >> $GITHUB_OUTPUT
          else
            echo "running script to detect changes automatically"
              . ./detect-folders-updated.sh  ${{ github.event.before }} ${{ github.sha }} infra
          fi
          echo "getting file"
        working-directory: .github/jobs

  service-build:
    needs: validate-service-updated
    strategy:
      matrix: ${{ fromJSON(needs.validate-service-updated.outputs.FOLDERS_UPDATED) }}
      fail-fast: false
    uses: danielrive/smart-cash/.github/workflows/template-service-deploy.yaml@feat/open-api
    with:
      AWS_REGION: us-west-2
      ENVIRONMENT: develop
      PROJECT_NAME: smart-cash
      SERVICE_NAME: ${{ matrix.folders }}
    secrets:
      AWS_ACCOUNT_NUMBER: ${{ secrets.AWS_ACCOUNT_NUMBER_DEVELOP }}
      GH_TOKEN_FLUX: ${{ secrets.GH_TOKEN_FLUXCD }}