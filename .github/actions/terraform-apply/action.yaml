name: 'Terraform apply'
description: 'Running Terraform apply'

inputs:
  WORKING_DIRECTORY:
    description: 'directory where the tf code is'
    required: false
    default: '/infra/terraform'
  GITHUB_TOKEN:
    description: 'The AWS account number where the resources will be deployed, this is a GitHub secret and is used to pass IAM roles and avoid hardcode the number in the code'
    required: true
  STAGE:
    description: 'terraform stage to deploy, start from base'
    required: true
  ARTIFAC_ID:
    description: 'unique ID to named the artifacts'
    required: true
   

runs:
  using: "composite"
  steps:
    - name: Terraform install
      id: 'install-terraform'
      uses: hashicorp/setup-terraform@v3
      with: 
        terraform_version: '${{ env.TERRAFORM_VERSION }}'
    - name: Validate terraform version
      id: validate-tf-version
      run: terraform version
      shell: bash
    - name: Download Artifact
      id: download-tf-plan
      uses: actions/download-artifact@v4
      with:
        name: tf-plan-${{ inputs.ARTIFAC_ID}}
        path: '${{ github.workspace }}${{ inputs.WORKING_DIRECTORY }}'
    - name: Run terraform init
      id: 'tf-init'
      run: |
           BUCKET_NAME="${{ env.PROJECT_NAME }}-tf-state-lock-${{ env.ENVIRONMENT }}-${{ env.AWS_REGION }}" 
           DYNAMODB_TABLE="${{ env.PROJECT_NAME }}-tf-state-${{ env.ENVIRONMENT }}-${{ env.AWS_REGION }}"
           terraform init \
           -backend-config=bucket="$BUCKET_NAME" \
           -backend-config=region='${{ env.AWS_REGION }}' \
            -backend-config=key='stage/${{ inputs.STAGE }}/${{ inputs.STAGE }}.tfstate' \
           -backend-config=dynamodb_table="$DYNAMODB_TABLE"
      shell: bash
      working-directory: '.${{ inputs.WORKING_DIRECTORY }}'
    - name: Run terraform apply
      run: |
           terraform apply \
           -input=false \
           ${{ github.run_id }}-${{ inputs.ARTIFAC_ID}}.tfplan
      shell: bash
      working-directory: '.${{ inputs.WORKING_DIRECTORY }}'
      env:
        GITHUB_TOKEN: ${{ inputs.GITHUB_TOKEN }}