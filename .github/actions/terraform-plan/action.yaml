name: 'Terraform Plan'
description: 'Running Terraform plan'

inputs:
  GITHUB_TOKEN:
    description: 'The AWS account number where the resources will be deployed, this is a GitHub secret and is used to pass IAM roles and avoid hardcode the number in the code'
    required: true
  STAGE:
    description: 'terraform stage to deploy, start from base'
    required: true
  WORKING_DIR:
    description: 'workign directory where terraform will run'
    required: true
outputs:
  PLAN_EXIT_CODE:
    description: "exit code generate after tf plan, 0= no changes, 2=changes, 1=error"
    value: ${{ steps.terraform-plan.outputs.tf-plan-code }}
runs:
  using: "composite"
  steps:
      - name: Terraform install
        id: 'install-terraform'
        uses: hashicorp/setup-terraform@v3
        with: 
         terraform_version: '${{ env.TERRAFORM_VERSION }}'
         terraform_wrapper: true
      - name: Validate terraform version
        id: validate-tf-version
        run: | 
             echo " -------- TERRAFORM VERSION ---------"
             terraform version
             echo " -------- GOLANG VERSION ---------"
             go version
        shell: bash
      - name: Run terraform init
        id: 'tf-init'
        run: |
              BUCKET_NAME="${{ env.PROJECT_NAME }}-tf-state-lock-${{ env.ENVIRONMENT }}-${{ env.AWS_REGION }}" 
              DYNAMODB_TABLE="${{ env.PROJECT_NAME }}-tf-state-${{ env.ENVIRONMENT }}-${{ env.AWS_REGION }}"
              terraform init \
              -backend-config=bucket="$BUCKET_NAME" \
              -backend-config=region='${{ env.AWS_REGION }}' \
              -backend-config=key='stage/${{ inputs.STAGE }}/${{ inputs.STAGE }}.tfstate' \
              -backend-config=dynamodb_table="$DYNAMODB_TABLE"
        shell: bash
        working-directory: './infra/${{ inputs.WORKING_DIR}}'
      - name: Run terraform validate
        id: 'tf-validate'
        run: terraform validate
        shell: bash
        working-directory: './infra/${{ inputs.WORKING_DIR}}'
      - name: Run terraform plan
        id: terraform-plan
        run: |
            echo "Running terraform plan in ${{ inputs.WORKING_DIR}} "
            set +e 
            terraform plan \
            -input=false \
            -var 'region=${{ env.AWS_REGION }}' \
            -var 'environment=${{ env.ENVIRONMENT }}' \
            -var 'project_name=${{ env.PROJECT_NAME }}' \
            -out ${{ github.run_id }}-${{ inputs.STAGE}}.tfplan \
            -detailed-exitcode
            exitcode="$?"
            echo "tf-plan-code=$exitcode" >> $GITHUB_OUTPUT
 
            if [ "$exitcode" -eq 0 ]; then
              echo "No changes"
              exit $exitcode
            elif [ "$exitcode" -eq 2 ]; then
              echo "changes"
              exit 0
            else
              echo "Error"
              exit $exitcode
            fi

        shell: bash
        working-directory: './infra/${{ inputs.WORKING_DIR}}'
        env:
          GITHUB_TOKEN: ${{ inputs.GITHUB_TOKEN }}

      - name: Publish Artifact
        uses: actions/upload-artifact@v4
        with:
          name: tf-plan-${{ inputs.STAGE}}
          path: '${{ github.workspace }}/infra/${{ inputs.WORKING_DIR}}/${{ github.run_id }}-${{ inputs.STAGE}}.tfplan'