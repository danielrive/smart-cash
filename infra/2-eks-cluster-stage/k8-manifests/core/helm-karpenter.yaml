apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: karpenter
  namespace: karpenter
spec:
  interval: 10m0s
  chart:
    spec:
      chart: karpenter
      version: 1.1.1
      sourceRef:
        kind: HelmRepository
        name: karpenter
        namespace: flux-system
  values:
    serviceAccount:
      create: true
      name: "karpenter"
    additionalClusterRoleRules: []
    serviceMonitor:
      enabled: false
    replicas: 2
    revisionHistoryLimit: 10
    strategy:
      rollingUpdate:
        maxUnavailable: 1
    podLabels: {}
    podAnnotations: {}
    podDisruptionBudget:
      name: karpenter
      maxUnavailable: 1
    podSecurityContext:
      fsGroup: 65532
    priorityClassName: system-cluster-critical
    hostNetwork: false
    schedulerName: default-scheduler
    dnsPolicy: ClusterFirst
    nodeSelector:
      kubernetes.io/os: linux
    # -- Affinity rules for scheduling the pod. If an explicit label selector is not provided for pod affinity or pod anti-affinity one will be created from the pod selector labels.
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
            - matchExpressions:
                - key: karpenter.sh/nodepool
                  operator: DoesNotExist
      podAntiAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          - topologyKey: "kubernetes.io/hostname"
    # -- Topology spread constraints to increase the controller resilience by distributing pods across the cluster zones. If an explicit label selector is not provided one will be created from the pod selector labels.
    topologySpreadConstraints:
      - maxSkew: 1
        topologyKey: topology.kubernetes.io/zone
        whenUnsatisfiable: DoNotSchedule
    # -- Tolerations to allow the pod to be scheduled to nodes with taints.
    tolerations:
      - key: CriticalAddonsOnly
        operator: Exists
    controller:
      # -- Distinguishing container name (containerName: karpenter-controller).
      containerName: controller
    # -- Global Settings to configure Karpenter
    settings:
      # -- The maximum length of a batch window. The longer this is, the more pods we can consider for provisioning at one
      # time which usually results in fewer but larger nodes.
      batchMaxDuration: 10s
      # -- The maximum amount of time with no new ending pods that if exceeded ends the current batching window. If pods arrive
      # faster than this time, the batching window will be extended up to the maxDuration. If they arrive slower, the pods
      # will be batched separately.
      batchIdleDuration: 1s
      # -- Cluster CA bundle for TLS configuration of provisioned nodes. If not set, this is taken from the controller's TLS configuration for the API server.
      clusterCABundle: ""
      clusterName: "smart-cash-develop"
      # Marking this true means that your cluster is running with an EKS control plane and Karpenter should attempt to discover cluster details from the DescribeCluster API
      eksControlPlane: true