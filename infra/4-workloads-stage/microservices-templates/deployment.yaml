apiVersion: apps/v1
kind: Deployment
metadata:
  name: deployment-${SERVICE_NAME}
  labels:
    app: ${SERVICE_NAME}
    tier: ${TIER}
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: ${SERVICE_NAME}
  template:
    metadata:
      labels:
        app: ${SERVICE_NAME}
        tier: ${TIER}
    spec:
      serviceAccountName: sa-${SERVICE_NAME}-service
      enableServiceLinks: false
      securityContext:
        runAsNonRoot: true
        runAsUser: 10003
        runAsGroup: 30001
      containers:
      - name: ${SERVICE_NAME}-container
        image: service-image
        imagePullPolicy: Always
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
        resources:
          requests:
            memory: "50Mi"   ###### VALIDATE THESE WERE RANDOM NUMBERS TO TEST
          limits:
            memory: "100Mi"  ###### VALIDATE THESE WERE RANDOM NUMBERS TO TEST
        ports:
        - containerPort: ${SERVICE_PORT}
        livenessProbe:
          httpGet:
            port: ${SERVICE_PORT}  
            path: ${SERVICE_PATH_HEALTH_CHECKS}  
          initialDelaySeconds: 1
          periodSeconds: 10